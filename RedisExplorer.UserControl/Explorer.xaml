<UserControl x:Class="RedisExplorer.UserControl.Explorer"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:Command="http://www.galasoft.ch/mvvmlight"
			xmlns:ViewModel="clr-namespace:RedisExplorer.ViewModel"
			xmlns:UserControl="clr-namespace:RedisExplorer.UserControl"
			xmlns:Redis="clr-namespace:StackExchange.Redis;assembly=StackExchange.Redis"
			xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
			mc:Ignorable="d"
			 d:DesignHeight="300" d:DesignWidth="300"
			 Name="MyToolWindow">

	<UserControl.Resources>
		<ViewModel:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />
	</UserControl.Resources>

	<Grid DataContext="{Binding Path=Main, Source={StaticResource Locator}}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="5"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>
		</Grid.RowDefinitions>
		<ToolBarTray Grid.Row="0">
			<ToolBar>
				<TextBox Name="urlTextBox" Text="{Binding Path=RedisUrl}" MinWidth="100"></TextBox>
				<Button Content="Connect" Command="{Binding Path=ConnectCommand}" Width="50" />
				<ComboBox Name="dbsComboBox" MinWidth="50"
					ItemsSource="{Binding Path=Databases}" SelectedItem="{Binding Path=CurrentDatabase}">
				</ComboBox>
			</ToolBar>
			<ToolBar>
				<TextBlock>Key:</TextBlock>
				<TextBox Text="{Binding Path=KeyRegex}" MinWidth="50" />
				<Button Content="Find" Command="{Binding Path=FindKeyCommand}"/>
			</ToolBar>
			<ToolBar DockPanel.Dock="Top" IsEnabled="{Binding IsConnected}">
				<xctk:DropDownButton Content="New">
					<xctk:DropDownButton.DropDownContent>
						<StackPanel Orientation="Vertical" Width="125">
							<StackPanel.Resources>
								<Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button">
									<Setter Property="Width" Value="100" />
									<Setter Property="HorizontalContentAlignment" Value="Left" />
									<Setter Property="HorizontalAlignment" Value="Left" />
								</Style>
							</StackPanel.Resources>
							<Button Command="{Binding Path=NewCommand}" CommandParameter="{x:Static Redis:RedisType.String}">String</Button>
							<Button Command="{Binding Path=NewCommand}" CommandParameter="{x:Static Redis:RedisType.List}">List</Button>
							<Button Command="{Binding Path=NewCommand}" CommandParameter="{x:Static Redis:RedisType.Hash}">List</Button>
						</StackPanel>
					</xctk:DropDownButton.DropDownContent>
				</xctk:DropDownButton>
				<Button Command="{Binding Path=DeleteCommand}">Delete</Button>
			</ToolBar>
		</ToolBarTray>
		<DockPanel Grid.Row="1" LastChildFill="True" Visibility="{Binding EditPanelVisibility}">
			<ToolBarTray DockPanel.Dock="Top">
				<ToolBar DockPanel.Dock="Top" >
					<Button Command="{Binding Path=SaveCommand}">Save</Button>
					<Button Command="{Binding Path=CancelCommand}">Cancel</Button>
				</ToolBar>
			</ToolBarTray>
			<UserControl:ValueEditor />
		</DockPanel>
		<GridSplitter Grid.Row="2" ResizeDirection="Rows" HorizontalAlignment="Stretch" Height="5"
					  Visibility="{Binding EditPanelVisibility}">
		</GridSplitter>
		<DataGrid Grid.Row="3" Name="_dataGrid" ItemsSource="{Binding Path=KeyValueCollection}" AutoGenerateColumns="False" 
					IsReadOnly="True" SelectionMode="Single" SelectionUnit="FullRow" IsEnabled="{Binding BrowseMode}"
					SelectedIndex="{Binding Path=SelectedIndex}" UserControl:FocusExtension.IsFocused="{Binding IsGridFocused}">
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="SelectionChanged">
					<Command:EventToCommand Command="{Binding RowChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=_dataGrid}" />
				</i:EventTrigger>
				<i:EventTrigger EventName="MouseDoubleClick">
					<Command:EventToCommand Command="{Binding GridDoubleClickCommand}" CommandParameter="{Binding SelectedItem, ElementName=_dataGrid}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<DataGrid.Columns>
				<DataGridTextColumn Header="Key" Binding="{Binding Key}" ></DataGridTextColumn>
				<DataGridTextColumn Header="Type" Binding="{Binding Type}" ></DataGridTextColumn>
				<DataGridTextColumn Header="Value" Binding="{Binding Text}" ></DataGridTextColumn>
			</DataGrid.Columns>
		</DataGrid>
	</Grid>
</UserControl>
